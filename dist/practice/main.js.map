{"version":3,"sources":["webpack:///./ngApp/token-interceptor.service.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor{\n\n  constructor() { }\n\n  intercept(req,next){\n    let tokenizedRequest = req.clone({\n      headers: req.headers.set('Authorization', 'Bearer ' + localStorage.getItem(\"accessToken\"))\n    })\n    return next.handle(tokenizedRequest);\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  {\n    path:'',\n    redirectTo:'/login',\n    pathMatch: 'full'\n  },\n  {\n    path:'login',component:LoginComponent\n  },\n  {\n    path:'dashboard',component:DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path:'register',component:RegisterComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponents = [LoginComponent,RegisterComponent]","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Eventhub</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/events\\\" routerLinkActive=\\\"active\\\">Events</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/special\\\" routerLinkActive=\\\"active\\\">Members</a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav\\\">\\n        <a class=\\\"nav-link\\\"  routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Login</a>\\n        <a class=\\\"nav-link\\\"  routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">Register</a>\\n        <a class=\\\"nav-link\\\" style=\\\"cursor:pointer\\\"  (click)=\\\"_authService.logoutUser()\\\">Logout</a>        \\n    </ul>\\n  </div>\\n</nav>    \\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>            \\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'practice';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms'\nimport { AppRoutingModule,routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { DashboardComponent } from './dashboard/dashboard.component'\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from 'ngApp/token-interceptor.service';\nimport { AuthService } from './auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [AuthGuard,AuthService,\n  {\n    provide:HTTP_INTERCEPTORS,\n    useClass:TokenInterceptorService,\n    multi:true\n\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\n  constructor(private _authService: AuthService,\n              private _route: Router){}\n  \n\n  canActivate(): boolean {\n    if(this._authService.loggedIn())\n    {\n      return true;\n    }\n    else{\n      this._route.navigate(['/login'])\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n \n\n\nprivate _registerUrl = \"http://localhost:8085/guest/addUser\"\nprivate _loginURL= 'http://localhost:8085/api/auth/signin'\nconstructor(private httpClient : HttpClient) {}\n\n\n  registerUser(registrationData: {}): any {\n    return this.httpClient.post<any>(this._registerUrl,registrationData);\n  }\n\n  loginUser(user){\n    let httpHeaders = new HttpHeaders({\n      'Content-Type' : 'application/json',\n      'Cache-Control': 'no-cache'\n         });    \n         let options = {\n      headers: httpHeaders\n         };\n\n    console.log(\"USERS================\" + user ) \n    return this.httpClient.post<any>(this._loginURL,user);\n  }\n\nloggedIn(){\n  return !!localStorage.getItem(\"accessToken\")\n}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"  Logged in dashboard works!\\n\\n  ssdfdsjknjknn\\n\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">MyProfile</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" style=\\\"cursor:pointer\\\"  (click)=\\\"getMyprofile()\\\">MyProfile</a>  \\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/special\\\" routerLinkActive=\\\"active\\\">Members</a>\\n        </li>\\n      </ul>\\n      <ul class=\\\"navbar-nav\\\">\\n          <a class=\\\"nav-link\\\"  routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Login</a>\\n          <a class=\\\"nav-link\\\"  routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">Register</a>\\n          <a class=\\\"nav-link\\\" style=\\\"cursor:pointer\\\"  (click)=\\\"_authService.logoutUser()\\\">Logout</a>        \\n      </ul>\\n    </div>\\n  </nav>    \\n  <div class=\\\"container\\\">\\n    <router-outlet></router-outlet>            \\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'\nimport { UserService } from '../user.service';\nimport { HttpClient, HttpHeaders} from '@angular/common/http'\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private _route: Router,private _userService: UserService) { }\n\n  ngOnInit() {\n  }\n\n\n  getMyprofile(){\n      console.log(\"In  dashboard\")\n      this._userService.getUserProfile().subscribe(\n        res => {\n          console.log(res.accessToken);\n          localStorage.setItem(\"accessToken\", res.accessToken);\n          this._route.navigate(['dashboard']);\n        },\n        err => console.log(err)\n        )\n    \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"py-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 mx-auto\\\">\\n      <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\n\\n      <!-- form card login -->\\n      <div class=\\\"card rounded-0\\\">\\n        <div class=\\\"card-header\\\">\\n          <h3 class=\\\"mb-0\\\">Login</h3>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form class=\\\"form\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"uname1\\\">Username</label>\\n              <input type=\\\"text\\\" class=\\\"form-control rounded-0\\\" [(ngModel)]=\\\"loginUserData.usernameOrEmail\\\" name=\\\"usernameOrEmail\\\" required>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Password</label>\\n              <input type=\\\"password\\\" class=\\\"form-control rounded-0\\\" [(ngModel)]=\\\"loginUserData.password\\\" name=\\\"password\\\" required>\\n            </div>\\n            <button type=\\\"button\\\" (click)=\\\"loginUser()\\\" class=\\\"btn btn-success float-right\\\">Login</button>\\n          </form>\\n        </div>\\n        <!--/card-block-->\\n      </div>\\n      <!-- /form card login -->\\n\\n    </div>\\n\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginUserData = {}\n\n  constructor(private _auth : AuthService,\n              private _route: Router) { }\n\n  ngOnInit() {\n  }\n\n  loginUser(){\n    console.log(\"In logincomponent\" + this.loginUserData )\n    this._auth.loginUser(this.loginUserData).subscribe(\n      res => {\n        console.log(res.accessToken);\n        localStorage.setItem(\"accessToken\", res.accessToken);\n        this._route.navigate(['dashboard']);\n      },\n      err => console.log(err)\n      )\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"py-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 mx-auto\\\">\\n      <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\n\\n      <!-- form card login -->\\n      <div class=\\\"card rounded-0\\\">\\n        <div class=\\\"card-header\\\">\\n          <h3 class=\\\"mb-0\\\">Register</h3>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form class=\\\"form\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Email Address  / Phone Number</label>\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"registrationData.emailAddress\\\" name=\\\"emailAddress\\\" class=\\\"form-control rounded-0\\\" required>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Password</label>\\n              <input type=\\\"password\\\" [(ngModel)]=\\\"registrationData.password\\\" name=\\\"password\\\" class=\\\"form-control rounded-0\\\"  required>\\n            </div>\\n            <button type=\\\"button\\\" (click)=\\\"registerUser()\\\" class=\\\"btn btn-primary float-right\\\">Register</button>\\n          </form>\\n        </div>\\n        <!--/card-block-->\\n      </div>\\n      <!-- /form card login -->\\n    </div>\\n\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registrationData={}\n  constructor(private _auth: AuthService) { }\n\n  ngOnInit() {\n  }\n\n\n  registerUser(){\n        this._auth.registerUser(this.registrationData).subscribe(\n        res => console.log(res),\n        err => console.log(err)\n)\n\n\n\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n \n\n\nprivate _getUserProfileURL = \"http://localhost:8085/user/getMyProfile\"\n\nconstructor(private httpClient : HttpClient) {}\n\n\n  getUserProfile(): any {\n    let httpHeaders = new HttpHeaders()\n    .set('Authorization', 'Bearer' + localStorage.getItem(\"accessToken\") );\n   return this.httpClient.get(this._getUserProfileURL, { headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem(\"accessToken\")})\n  })\n  \n  }\n\n\nloggedIn(){\n  return !!localStorage.getItem(\"accessToken\")\n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}